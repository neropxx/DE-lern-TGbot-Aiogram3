from bot_set.bot_states import BotStates
from bot_set.links import VERB_LINK, PRETERITUM_LINK
from bot_set.my_bot import my_bot

from aiogram import Router
from aiogram import F
from aiogram.filters import StateFilter
from aiogram.types import callback_query
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

prateritum_router = Router()


@prateritum_router.callback_query(F.data == "preteritum", StateFilter(BotStates.verb))
async def prateritum_callback(callback_data: callback_query, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–ª–±–µ–∫–∞ –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≥–ª–∞–≥–æ–ª–µ
    –í—ã–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –≥–ª–∞–≥–æ–ª–µ –≤ –ø—Ä–µ—Ç–µ—Ä–∏—Ç—É–º

    :param callback_data: –æ–±—ä–µ–∫—Ç –∫–æ–ª–±–µ–∫–∞
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    data = await state.get_data()
    wort_link = PRETERITUM_LINK + (data["word_link"].replace(VERB_LINK, ""))

    await callback_data.answer(text="–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ  ü´°")

    try:
        await my_bot.send_photo(chat_id=callback_data.from_user.id,
                                photo=wort_link,
                                caption="–≠—Ç–æ—Ç –≥–ª–∞–≥–æ–ª –≤ Pr√§teritum  üë®üèª‚Äçüè´")
    except TelegramBadRequest:
        await my_bot.send_message(chat_id=callback_data.from_user.id,
                                  text="–î–ª—è —ç—Ç–æ–≥–æ –≥–ª–∞–≥–æ–ª–∞ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã  üëÆ‚Äç‚ôÇÔ∏è")
