import asyncio

from aiogram import Router
from aiogram.filters import Command, StateFilter
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram import F
from aiogram.types import CallbackQuery
from aiogram.exceptions import TelegramBadRequest, TelegramAPIError

from database.db_class import Database
from bot_set.db_connection import db_conn
from bot_set.bot_states import BotStates
from bot_set.texts import INSTRUCTION_SEND, NOT_ADMIN_SEND, CONFIRM_INSTRUCTION
from keyboards.cofirm_ikb import get_confirm_ikb
from bot_set.my_bot import my_bot
from keyboards.choose_photo_regim import get_choose_photo_regim_ikb
from processing.ads_sending_without_photo import sending_without_photo
from keyboards.choose_btn_ikb import get_choose_button_regim_ikb
from processing.ads_sending_with_photo import sending_with_photo
from keyboards.ads_ikb import get_ads_ikb
from processing.ads_sending_with_btn import sending_with_btn

ads_send_router = Router()


@ads_send_router.message(Command("send"))
async def send_cmd(message: Message, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–∞–ª–µ–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥—É –≤—ã–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞, –∏–Ω–∞—á–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è middlware
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—è–µ—Ç—Å—è –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç–æ—Ä: –æ–∂–∏–¥–∞–µ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    :param message: –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await state.set_state(BotStates.wait_text_to_send)
    await message.reply(text=INSTRUCTION_SEND)

    # if Database.is_admin(user_id=int(message.from_user.id), conn=db_conn):
    #     await state.set_state(BotStates.wait_text_to_send)
    #     await message.reply(text=INSTRUCTION_SEND)
    # else:
    #     await message.reply(text=NOT_ADMIN_SEND)


@ads_send_router.message(F.text, ~F.text.startswith("/"), StateFilter(BotStates.wait_text_to_send))
async def get_ads_text(message: Message, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –ø–∞–º—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–º–µ—Ä, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç

    :param message: –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await state.update_data(ads_text=message.text)
    ads_data = await state.get_data()

    await message.reply(text=CONFIRM_INSTRUCTION)
    await message.answer(text=ads_data["ads_text"], reply_markup=get_confirm_ikb())


@ads_send_router.callback_query(F.data == "CONFIRM", StateFilter(BotStates.wait_text_to_send))
async def get_confirm_callback(callback_data: CallbackQuery, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–ª–±–µ–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∫ –ø–æ—Å—Ç—É –ª–∏–±–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –±–µ–∑ —Ñ–æ—Ç–æ (—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—è–µ—Ç—Å—è: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –±–µ–∑ —Ñ–æ—Ç–æ –ª–∏–±–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ

    :param callback_data: –æ–±—ä–µ–∫—Ç –∫–æ–ª–±–µ–∫–∞
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await callback_data.answer(text="–¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! üìé")
    await my_bot.send_message(chat_id=callback_data.from_user.id,
                              text="–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ? üåÑ",
                              reply_markup=get_choose_photo_regim_ikb())
    await state.set_state(BotStates.choose_photo_regim)


@ads_send_router.callback_query(StateFilter(BotStates.choose_photo_regim), F.data == "WITHOUT PHOTO")
async def send_without_photo_callback(callback_data: CallbackQuery, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–ª–±–µ–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ –≤—ã–±–æ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º
    –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è

    :param callback_data: –æ–±—ä–µ–∫—Ç –∫–æ–ª–±–µ–∫–∞
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await callback_data.answer(text="–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É –±–µ–∑ —Ñ–æ—Ç–æ! üìú –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã! ü§ñ",
                               show_alert=True)

    await asyncio.sleep(2)

    ads_data = await state.get_data()
    await sending_without_photo(author_id=callback_data.from_user.id,
                                text=ads_data["ads_text"],
                                regim="activ")
    await state.clear()


@ads_send_router.callback_query(StateFilter(BotStates.choose_photo_regim),
                                F.data == "WITH PHOTO")
async def send_with_photo_callback(callback_data: CallbackQuery, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–ª–±–µ–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ –∂–µ–ª–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∫ —Ä–µ–∫–ª–∞–º–Ω–æ–º—É –ø–æ—Å—Ç—É
    –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—è–µ—Ç—Å—è: –æ–∂–∏–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ

    :param callback_data: –æ–±—ä–µ–∫—Ç –∫–æ–ª–±–µ–∫–∞
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await callback_data.answer(text="–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É —Å —Ñ–æ—Ç–æ! üåÑ")
    await my_bot.send_message(chat_id=callback_data.from_user.id, text="–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ! üåá")

    await state.set_state(BotStates.wait_photo_to_send)


@ads_send_router.message(StateFilter(BotStates.wait_photo_to_send), F.photo)
async def get_photo(message: Message, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π —Ñ–æ—Ç–æ –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç id —Ñ–æ—Ç–æ –≤ –ø–∞–º—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–º–µ—Ä, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç

    :param message: –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await state.update_data(ads_photo=message.photo[0].file_id)

    await message.answer(text="–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! üåá –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–∞. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å "
                              "—Ñ–æ—Ç–æ, –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ"
                              "\n–í–∞—à–∞ —Ä–∞—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:")
    ads_data = await state.get_data()
    await my_bot.send_photo(chat_id=message.from_user.id,
                            photo=ads_data["ads_photo"],
                            caption=ads_data["ads_text"],
                            reply_markup=get_confirm_ikb())


@ads_send_router.callback_query(StateFilter(BotStates.wait_photo_to_send), F.data == "CONFIRM")
async def confirm_photo(callback_data: CallbackQuery, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–ª–±–µ–∫–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —Ç–µ–∫—Å—Ç+—Ñ–æ—Ç–æ
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –∫ –ø–æ—Å—Ç—É
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—è–µ—Ç—Å—è: –æ–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ ‚Äì‚Äì —Å –∫–Ω–æ–ø–∫–æ–π –∏–ª–∏ –±–µ–∑

    :param callback_data: –æ–±—ä–µ–∫—Ç –∫–æ–ª–±–µ–∫–∞
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """

    await callback_data.answer(text="üëç")
    await my_bot.send_message(chat_id=callback_data.from_user.id, text="–†–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! "
                                                                       "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å —Å—Å—ã–ª–∫–æ–π?",
                              reply_markup=get_choose_button_regim_ikb())
    await state.set_state(BotStates.choose_btn_regim)


@ads_send_router.callback_query(StateFilter(BotStates.choose_btn_regim), F.data == "WITHOUT BUTTON")
async def send_ads_without_button(callback_data: CallbackQuery, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–ª–±–µ–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –±–µ–∑ –∫–Ω–æ–ø–∫–∏
    –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è

    :param callback_data: –æ–±—ä–µ–∫—Ç –∫–æ–ª–±–µ–∫–∞
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await callback_data.answer(text="–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É –±–µ–∑ –∫–Ω–æ–ø–∫–∏! üü• –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã! ü§ñ",
                               show_alert=True)

    await asyncio.sleep(2)

    ads_data = await state.get_data()
    await sending_with_photo(author_id=callback_data.from_user.id,
                             photo_id=ads_data["ads_photo"],
                             text=ads_data["ads_text"],
                             regim="activ")
    await state.clear()


@ads_send_router.callback_query(StateFilter(BotStates), F.data == "WITH BUTTON")
async def add_button(callback_data: CallbackQuery, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–ª–±–µ–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π –∂–µ–ª–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –∫ —Ä–µ–∫–ª–∞–º–Ω–æ–º—É –ø–æ—Å—Ç—É
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–± –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è: –æ–∂–∏–¥–∞–µ—Ç—Å—è —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤ —Ä–µ–∫–ª–∞–º–Ω–æ–º –ø–æ—Å—Ç—É

    :param callback_data: –æ–±—ä–µ–∫—Ç –∫–æ–ª–±–µ–∫–∞
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await callback_data.answer(text="–¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–∏–º —Ç–µ–∫—Å—Ç –∏ —Å—Å—ã–ª–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏")
    await my_bot.send_message(chat_id=callback_data.from_user.id, text="–ü—Ä–∏—à–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ ü§ñ")

    await state.set_state(BotStates.wait_btn_text)


@ads_send_router.message(StateFilter(BotStates.wait_btn_text), F.text, ~F.text.startswith("/"))
async def get_btn_text(message: Message, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ–ª—É—á–∞–±—â–µ–≥–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    —Ç–µ–∫—Å—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–∞–º—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è: –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∫ —Ä–µ–∫–ª–∞–º–Ω–æ–º—É –ø–æ—Å—Ç—É

    :param message: –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await state.update_data(ads_button_text=message.text)

    await message.answer(text="–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω, —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏")
    await state.set_state(BotStates.wait_btn_link)


@ads_send_router.message(StateFilter(BotStates.wait_btn_link), F.text, ~F.text.startswith("/"))
async def get_btn_link(message: Message, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ–ª—É—á–∞—é—â–∏–π —Å—Å—ã–ª–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∫ —Ä–µ–∫–ª–∞–º–Ω–æ–º—É –ø–æ—Å—Ç—É
    —Å—Å—ã–ª–∫–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–∞–º—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≤—Ç–æ—Ä—É —Ä–∞—Å—Å—ã–ª–∫–∏
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞

    –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏

    :param message: –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await state.update_data(ads_button_link=message.text)

    ads_data = await state.get_data()

    try:
        await my_bot.send_photo(chat_id=message.from_user.id,
                                photo=ads_data["ads_photo"],
                                caption=ads_data["ads_text"],
                                reply_markup=(get_ads_ikb(ads_btn_text=ads_data["ads_button_text"],
                                                          ads_btn_link=ads_data["ads_button_link"])))

        await message.answer(text="–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! –í–æ—Ç —Ç–∞–∫ –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚òùÔ∏è")

        await my_bot.send_message(chat_id=message.from_user.id,
                                  text="–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, –æ—Ç–º–µ–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ "
                                       "—Ä–∞—Å—Å—ã–ª–∫–∏ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ /cancel üî¥"
                                       "\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –∫–Ω–æ–ø–∫–∏, –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏—Ç–µ ee –µ—â–µ —Ä–∞–∑ ‚ûø"
                                       "\n\n–ï—Å–ª–∏ –ø–æ—Å—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–æ–∫ –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —ç—Ç–æ ‚¨áÔ∏èüü¢",
                                  reply_markup=get_confirm_ikb())

    except TelegramBadRequest and TelegramAPIError as error_text:
        await message.reply(text=f"–≠—Ç–æ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞, –≤—ã–∑–≤–∞—é—â–∞—è –æ—à–∏–±–∫—É: {error_text}\n–ü—Ä–∏—à–ª–∏—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É! üî¥")


@ads_send_router.callback_query(StateFilter(BotStates.wait_btn_link), F.data == "CONFIRM")
async def confirm_button(callback_data: CallbackQuery, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–ª–±–µ–∫–∞–Æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —Ç–µ–∫—Å—Ç+—Ñ–æ—Ç–æ+–∫–Ω–æ–ø–∫–∞(—Ç–µ–∫—Å—Ç, —Å—Å—ã–ª–∫–∞)
    –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è

    :param callback_data: –æ–±—ä–µ–∫—Ç –∫–æ–ª–±–µ–∫–∞
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await callback_data.answer(text="–†–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç –≥–æ—Ç–æ–≤! üü© –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã! ü§ñ",
                               show_alert=True)

    await asyncio.sleep(2)

    ads_data = await state.get_data()
    await sending_with_btn(author_id=callback_data.from_user.id,
                           text=ads_data["ads_text"],
                           photo_id=ads_data["ads_photo"],
                           ikb_to_send=get_ads_ikb(ads_btn_text=ads_data["ads_button_text"],
                                                   ads_btn_link=ads_data["ads_button_link"]),
                           regim="activ")
    await state.clear()


@ads_send_router.message(Command("cancel"), StateFilter(BotStates.wait_text_to_send,
                                                        BotStates.choose_photo_regim,
                                                        BotStates.wait_photo_to_send,
                                                        BotStates.confirm_with_photo,
                                                        BotStates.choose_btn_regim,
                                                        BotStates.wait_btn_text,
                                                        BotStates.wait_btn_link))
async def cmd_cancel_ads_sending(message: Message, state: FSMContext) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω—ã —Ä–∞—Å—Å—ã–ª–∫–∏
    —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è

    :param message: –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param state: –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    :return: None
    """
    await message.reply(text="–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É! üî¥")
    await state.clear()
