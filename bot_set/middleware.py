from aiogram.dispatcher.middlewares.base import BaseMiddleware
from aiogram.dispatcher.middlewares.error import CancelHandler
from aiogram.types import Message, CallbackQuery
from aiogram.types import TelegramObject

from typing import Callable, Awaitable, Dict, Any, Union

from database.db_class import Database
from bot_set.db_connection import db_conn
from bot_set.my_bot import my_bot


class AdminCheckMiddleware(BaseMiddleware):
    """
    –ö–ª–∞—Å—Å middleware –ø—Ä–≤–æ–µ—Ä—è—é—â–∏–π, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä,
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º –∏ –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–µ—Ç—Å—è.
    """
    async def __call__(
            self,
            handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
            event: Message,
            data: Dict[str, Any]) -> Any:
        if not Database.is_admin(user_id=event.from_user.id, conn=db_conn):
            await my_bot.send_message(chat_id=event.from_user.id,
                                      text="–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º! üü•")
            return
        return await handler(event, data)
